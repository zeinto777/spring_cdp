<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>prepareData.properties</value>
            </list>
        </property>
    </bean>

    <context:annotation-config/>
    <context:component-scan base-package="com.epam.hw2.dao.impl"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${data.source.driver.class.name}"
          p:url="${data.source.url}"
          p:username="${data.source.username}"
          p:password="${data.source.password}"/>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource"/>

    <bean id="ticketDAO" class="com.epam.hw2.dao.impl.TicketDAOImpl"/>

    <bean id="eventService" class="com.epam.hw2.service.impl.EventServiceImpl"/>
    <bean id="ticketService" class="com.epam.hw2.service.impl.TicketServiceImpl"/>
    <bean id="userService" class="com.epam.hw2.service.impl.UserServiceImpl"/>


    <bean id="userAccountService" class="com.epam.hw2.service.impl.UserAccountServiceImpl"/>

    <bean id="defaultDataProvider" class="com.epam.hw2.bean.DefaultDataProvider"/>

    <bean id="customSqlParameterSource" class="com.epam.hw2.source.CustomSqlParameterSource"/>

    <bean id="bookingFacade" class="com.epam.hw2.facade.impl.BookingFacadeImpl"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="date" class="java.util.Date">
        <constructor-arg value="${date.for.test}"/>
    </bean>
</beans>